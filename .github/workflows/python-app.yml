# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "v1.0.0-dev" ]
  pull_request:
    branches: [ "v1.0.0-dev" ]

permissions:
  contents: read

env:
    PYTHON_VERSION: 3.9.20
    VIRTUALENV: new-commit

jobs:
  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    - name: Initializing pyenv
      run: |
        export PYENV_ROOT="/home/nyorf/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        export PYENV_VIRTUALENV_DISABLE_PROMPT=1
        eval "$(pyenv init --path)"
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"
    - name: Check if PYTHON_VERSION is installed, install if not exists
      run: |
        pyenv install ${{ env.PYTHON_VERSION }} -s
        pyenv local ${{ env.PYTHON_VERSION }}
    - name: Create virtualenv
      run: |
        pyenv virtualenv ${{ env.VIRTUALENV }}
        pyenv activate ${{ env.VIRTUALENV }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Deactivate and delete virtualenv
      run: |
        pyenv deactivate ${{ env.VIRTUALENV }}
        pyenv virtualenv-delete -f ${{ env.VIRTUALENV }}
